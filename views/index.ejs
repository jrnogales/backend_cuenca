<% layout('partials/layout') %>

<section class="toolbar">
  <form id="filtros" onsubmit="event.preventDefault()">
    <div class="group">
      <label>Seleccionar fechas</label>
      <input type="date" id="f-fecha">
    </div>

    <div class="group">
      <label>Adultos</label>
      <select id="f-adultos">
        <% for (let i=1;i<=10;i++){ %>
          <option value="<%= i %>" <%= i===2?'selected':'' %>><%= i %></option>
        <% } %>
      </select>
    </div>

    <div class="group">
      <label>Ni√±os</label>
      <select id="f-ninos">
        <% for (let i=0;i<=10;i++){ %>
          <option value="<%= i %>"><%= i %></option>
        <% } %>
      </select>
    </div>

    <button id="btn-aplicar" class="btn-primary outline" type="button">Aplicar</button>
  </form>
</section>

<% if (error) { %>
  <div class="notice error"><%= error %></div>
<% } %>

<% if (!paquetes || paquetes.length===0) { %>
  <div class="notice">No hay paquetes disponibles por ahora.</div>
<% } %>

<section class="cards">
  <% (paquetes||[]).forEach(p => { 
      const pa = Number(p.precio_adulto||0);
      const pn = Number(p.precio_nino||0);
  %>
    <article class="card" 
      data-id="<%= p.codigo %>" 
      data-pa="<%= pa %>" 
      data-pn="<%= pn %>"
      data-img="<%= p.imagen || '' %>"
      data-title="<%= p.titulo %>">

      <div class="pic">
        <!-- Usar solo URL alojada en BD -->
        <img src="<%= p.imagen || '' %>" alt="<%= p.titulo %>" loading="lazy">
      </div>

      <div class="card-body">
        <h3 class="title"><%= p.titulo %></h3>

        <p class="meta">
          <span class="dot"></span> 
          <%= p.ciudad || 'Cuenca' %> ¬∑ 
          <%= (p.duracion_dias||1) %> horas
        </p>

        <ul class="perks">
          <li><span class="icon">‚úî</span> Cancelaci√≥n gratuita</li>
          <li><span class="icon">üïí</span> <%= (p.duracion_horas|| (p.duracion_dias||1)*8) %> h</li>
        </ul>

        <div class="divider"></div>

        <div class="price-n-cta">
          <div class="prices">
            <div class="from">a partir de</div>
            <div class="usd">$<%= pa.toFixed(2) %> <span class="suffix">US$</span></div>
            <div class="note">El precio var√≠a en funci√≥n del n√∫mero de personas por grupo</div>
          </div>

          <!-- Controles de cantidad -->
          <div class="qty">
            <label>Adultos</label>
            <input type="number" class="in-adultos" min="1" max="20" value="2">
          </div>
          <div class="qty">
            <label>Ni√±os</label>
            <input type="number" class="in-ninos" min="0" max="20" value="0">
          </div>

          <div class="total">Total: <strong class="total-val">$0.00</strong></div>

          <!-- Bot√≥n A√±adir al carrito -->
          <button class="btn-primary add-cart" type="button">A√±adir al carrito</button>
        </div>
      </div>
    </article>
  <% }) %>
</section>

<script>
(function () {
  // ===== utils =====
  function todayLocalISO() {
    const d = new Date();
    d.setMinutes(d.getMinutes() - d.getTimezoneOffset());
    return d.toISOString().slice(0, 10);
  }

  function calcCard(card){
    const pa = Number(card.dataset.pa || 0);
    const pn = Number(card.dataset.pn || 0);
    const inA = card.querySelector('.in-adultos');
    const inN = card.querySelector('.in-ninos');
    const totalEl = card.querySelector('.total-val');

    const A = Math.max(1, parseInt(inA?.value ?? '1', 10));
    const N = Math.max(0, parseInt(inN?.value ?? '0', 10));
    const total = (A * pa) + (N * pn);

    if (totalEl) totalEl.textContent = '$' + total.toFixed(2);
  }

  async function apiAddToCart(payload){
    try {
      const res = await fetch('/cart/add', {
        method: 'POST',
        headers: { 'Content-Type':'application/json' },
        body: JSON.stringify(payload)
      });

      if (res.status === 401) {
        // si el backend devolvi√≥ JSON con redirect, √∫salo; si no, redirige al login con next=/cart
        let data = null;
        try { data = await res.json(); } catch {}
        const redirect = (data && data.redirect) ? data.redirect
          : '/login?msg=Debes%20iniciar%20sesion&next=' + encodeURIComponent('/cart');
        location.href = redirect;
        return null;
      }
      if (res.status === 409) {
        const data = await res.json().catch(()=>({}));
        alert(data.message || 'No hay cupos suficientes para esa fecha.');
        return null;
      }
      if (!res.ok) {
        const txt = await res.text();
        alert(txt || 'No se pudo a√±adir al carrito.');
        return null;
      }
      return await res.json();
    } catch (e) {
      alert('Error de red al a√±adir al carrito.');
      return null;
    }
  }

  // ===== refs =====
  const $adultSel = document.getElementById('f-adultos');
  const $ninoSel  = document.getElementById('f-ninos');
  const $fecha    = document.getElementById('f-fecha');
  const $apply    = document.getElementById('btn-aplicar');

  if ($fecha) {
    $fecha.min = todayLocalISO();
    if (!$fecha.value || $fecha.value < $fecha.min) $fecha.value = $fecha.min;
  }

  // ===== init cards =====
  document.querySelectorAll('.card[data-id]').forEach(card=>{
    const inA = card.querySelector('.in-adultos');
    const inN = card.querySelector('.in-ninos');
    if (inA) inA.value = parseInt($adultSel?.value ?? '2', 10);
    if (inN) inN.value = parseInt($ninoSel?.value ?? '0', 10);
    calcCard(card);

    inA?.addEventListener('input', ()=>calcCard(card));
    inN?.addEventListener('input', ()=>calcCard(card));

    // *** Bot√≥n correcto: .add-cart (evita selectores raros) ***
    const btnAdd = card.querySelector('.add-cart');
    btnAdd?.addEventListener('click', async ()=>{
      if (!$fecha?.value) { alert('Selecciona una fecha antes de a√±adir.'); return; }
      if ($fecha.value < $fecha.min) { $fecha.value = $fecha.min; }

      const payload = {
        codigo: card.dataset.id,
        fecha:  $fecha.value,
        adultos: Math.max(1, parseInt(card.querySelector('.in-adultos')?.value ?? '1', 10)),
        ninos:   Math.max(0, parseInt(card.querySelector('.in-ninos')?.value ?? '0', 10))
      };

      const prev = btnAdd.textContent;
      btnAdd.disabled = true;
      btnAdd.textContent = 'A√±adiendo‚Ä¶';

      const data = await apiAddToCart(payload);

      btnAdd.textContent = prev;
      btnAdd.disabled = false;

      if (data && data.ok) {
        // actualiza badge si existe en tu layout: <span data-cart-count>0</span>
        const count = data.items?.reduce((n, it)=> n + Number(it.adultos||0) + Number(it.ninos||0), 0) || 0;
        const badge = document.querySelector('[data-cart-count]');
        if (badge) {
          badge.textContent = count;
          badge.style.display = count > 0 ? 'inline-block' : 'none';
        }

        btnAdd.textContent = 'A√±adido ‚úì';
        btnAdd.disabled = true;
        setTimeout(()=>{ btnAdd.textContent = prev; btnAdd.disabled = false; }, 800);
      }
    });
  });

  // fecha change -> recalc
  $fecha?.addEventListener('change', ()=>{
    if ($fecha.value < $fecha.min) $fecha.value = $fecha.min;
    document.querySelectorAll('.card[data-id]').forEach(calcCard);
  });

  // aplicar -> sincroniza cantidades con toolbar
  $apply?.addEventListener('click', ()=>{
    if ($fecha.value < $fecha.min) $fecha.value = $fecha.min;
    document.querySelectorAll('.card[data-id]').forEach(card=>{
      const inA = card.querySelector('.in-adultos');
      const inN = card.querySelector('.in-ninos');
      if (inA) inA.value = parseInt($adultSel?.value ?? '2', 10);
      if (inN) inN.value = parseInt($ninoSel?.value ?? '0', 10);
      calcCard(card);
    });
  });
})();
</script>
